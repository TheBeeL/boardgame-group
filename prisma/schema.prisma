// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

model Example {
    id String @id @default(cuid())
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String      @id @default(cuid())
    name          String?
    email         String?     @unique
    emailVerified DateTime?
    image         String?
    bggUsername   String?
    accounts      Account[]
    sessions      Session[]
    collection    Boardgame[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Boardgame {
    id             Int         @id @unique
    expansionOfId  Int?
    expansionOf    Boardgame?  @relation("Expansions", fields: [expansionOfId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    name           String
    year           Int
    image          String
    thumbnail      String
    description    String
    weight         Decimal
    minPlaytime    Int
    maxPlaytime    Int
    minPlayerCount Int
    maxPlayerCount Int
    labels         Label[]
    expansions     Boardgame[] @relation("Expansions")
    users          User[]
}

model Label {
    id         Int         @id @unique
    name       String
    type       String
    boardgames Boardgame[]
}
